generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  memberships Membership[]
  payments    Payment[]
  payouts     Payout[]
}

enum Role {
  ADMIN
  MEMBER
}

model Committee {
  id            String      @id @default(cuid())
  name          String
  monthlyAmount Int
  currency      String      @default("AED")
  memberCount   Int
  startAt       DateTime
  drawMethod    String      @default("fixed") // fixed|random|need
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  memberships   Membership[]
  cycles        Cycle[]
}

model Membership {
  id          String    @id @default(cuid())
  userId      String
  committeeId String
  orderIndex  Int       // 0..(memberCount-1), payout month

  user        User      @relation(fields: [userId], references: [id])
  committee   Committee @relation(fields: [committeeId], references: [id])
}

model Cycle {
  id           String     @id @default(cuid())
  committeeId  String
  number       Int        // 1,2,3,...
  startedAt    DateTime
  completedAt  DateTime?

  committee    Committee  @relation(fields: [committeeId], references: [id])
  payments     Payment[]
  payouts      Payout[]
}

model Payment {
  id          String   @id @default(cuid())
  userId      String
  committeeId String
  cycleId     String
  monthIndex  Int      // 0..memberCount-1
  amount      Int
  currency    String   @default("AED")
  status      String   @default("succeeded")
  stripeId    String?

  createdAt   DateTime @default(now())

  user        User      @relation(fields: [userId], references: [id])
  committee   Committee @relation(fields: [committeeId], references: [id])
  cycle       Cycle     @relation(fields: [cycleId], references: [id])

  @@unique([userId, committeeId, cycleId, monthIndex])
}

model Payout {
  id          String   @id @default(cuid())
  userId      String
  committeeId String
  cycleId     String
  monthIndex  Int      // who gets lump sum at monthIndex
  amount      Int
  currency    String   @default("AED")
  paidAt      DateTime?

  user        User      @relation(fields: [userId], references: [id])
  committee   Committee @relation(fields: [committeeId], references: [id])
  cycle       Cycle     @relation(fields: [cycleId], references: [id])

  @@unique([committeeId, cycleId, monthIndex])
}
